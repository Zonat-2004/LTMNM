import React, { useEffect, useState } from 'react';
import { useLocation, useNavigate } from 'react-router-dom';
import qrImage from '../assets/qr.jpg'; // ƒëi·ªÅu ch·ªânh ƒë∆∞·ªùng d·∫´n t√πy theo v·ªã tr√≠ file


const OrderForm = () => {
  const location = useLocation();
  const navigate = useNavigate();
  const cake = location.state?.cake;

  const [userInfo, setUserInfo] = useState({
    name: '',
    email: '',
    address: ''
  });
  const [quantity, setQuantity] = useState(1);
  const [paymentMethod, setPaymentMethod] = useState('cod');
  const [message, setMessage] = useState('');

  useEffect(() => {
    if (!cake) {
      navigate('/cakelist');
    }
  }, [cake, navigate]);

  const handleChange = (e) => {
    const { name, value } = e.target;
    setUserInfo({
      ...userInfo,
      [name]: value
    });
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    if (!userInfo.name || !userInfo.email || !userInfo.address) {
      setMessage('‚ùå Vui l√≤ng ƒëi·ªÅn ƒë·∫ßy ƒë·ªß th√¥ng tin.');
      return;
    }
    setMessage(`üéâ ƒê∆°n h√†ng th√†nh c√¥ng! Thanh to√°n: ${paymentMethod === 'cod' ? 'Khi nh·∫≠n h√†ng' : 'M√£ QR'}`);
  };

  return (
    <div className="container py-5">
      <h2 className="text-center text-primary mb-4">üõçÔ∏è ƒê·∫∑t H√†ng</h2>

      {!cake ? (
        <div className="alert alert-danger text-center">
          üõë Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m.
        </div>
      ) : (
        <div className="row g-4">
          {/* C·ªôt tr√°i - Th√¥ng tin s·∫£n ph·∫©m */}
          <div className="col-md-6">
            <div className="card shadow-sm border-0 h-100">
              <img
                src={`http://localhost:8000${cake.image}`}
                alt={cake.name}
                className="card-img-top rounded-top"
                style={{ maxHeight: '300px', objectFit: 'cover' }}
              />
              <div className="card-body">
                <h5 className="card-title text-danger">{cake.name}</h5>
                <p className="card-text">{cake.description}</p>
                <p className="fw-bold mb-1">ƒê∆°n gi√°: {cake.price.toLocaleString()} VND</p>
                <p className="mb-1">S·ªë l∆∞·ª£ng: {quantity}</p>
                <p className="fw-bold">T·ªïng ti·ªÅn: {(cake.price * quantity).toLocaleString()} VND</p>
              </div>
            </div>
          </div>

          {/* C·ªôt ph·∫£i - Th√¥ng tin kh√°ch h√†ng */}
          <div className="col-md-6">
            <form onSubmit={handleSubmit} className="p-4 border rounded shadow-sm bg-light">
              <div className="mb-3">
                <label className="form-label">H·ªç v√† T√™n</label>
                <input
                  type="text"
                  className="form-control"
                  name="name"
                  value={userInfo.name}
                  onChange={handleChange}
                  required
                />
              </div>

              <div className="mb-3">
                <label className="form-label">Email</label>
                <input
                  type="email"
                  className="form-control"
                  name="email"
                  value={userInfo.email}
                  onChange={handleChange}
                  required
                />
              </div>

              <div className="mb-3">
                <label className="form-label">ƒê·ªãa ch·ªâ</label>
                <input
                  type="text"
                  className="form-control"
                  name="address"
                  value={userInfo.address}
                  onChange={handleChange}
                  required
                />
              </div>

              <div className="mb-3">
                <label className="form-label">S·ªë l∆∞·ª£ng</label>
                <input
                  type="number"
                  min="1"
                  className="form-control"
                  value={quantity}
                  onChange={(e) => setQuantity(parseInt(e.target.value))}
                />
              </div>

              <div className="mb-3">
                <label className="form-label">Ph∆∞∆°ng th·ª©c thanh to√°n</label>
                <select
                  className="form-select"
                  value={paymentMethod}
                  onChange={(e) => setPaymentMethod(e.target.value)}
                >
                  <option value="cod">Thanh to√°n khi nh·∫≠n h√†ng</option>
                  <option value="qr">M√£ QR</option>
                </select>
              </div>

              {paymentMethod === 'qr' && (
  <div className="text-center my-3">
    <p className="text-muted mb-2">Vui l√≤ng qu√©t m√£ QR ƒë·ªÉ thanh to√°n:</p>
    <img
      src={qrImage}
      alt="M√£ QR thanh to√°n"
      className="border rounded shadow-sm"
      style={{ maxWidth: '200px' }}
    />
  </div>
)}

              <div className="d-grid mt-4">
                <button type="submit" className="btn btn-primary">
                  ‚úÖ ƒê·∫∑t h√†ng
                </button>
              </div>

              {message && (
                <div className="alert alert-success text-center mt-3">
                  {message}
                </div>
              )}
            </form>
          </div>
        </div>
      )}
    </div>
  );
};

export default OrderForm;
